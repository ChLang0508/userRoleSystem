<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chlang.user_role_system.dao.BaseRoleDao">

    <resultMap type="com.chlang.user_role_system.entity.BaseRole" id="BaseRoleMap">
        <result property="ord" column="ord" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createUser" column="create_user" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateUser" column="update_user" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseRoleMap">
        select ord,
               code,
               role_name,
               status,
               sort,
               create_time,
               create_user,
               update_time,
               update_user
        from UserRoleSystem.base_role
        where ord = #{ord}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseRoleMap">
        select ord,
               code,
               role_name,
               status,
               sort,
               create_time,
               create_user,
               update_time,
               update_user
        from UserRoleSystem.base_role limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseRoleMap">
        select
        ord, code, role_name, status, sort, create_time, create_user, update_time, update_user
        from UserRoleSystem.base_role
        <where>
            <if test="ord != null">
                and ord = #{ord}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="sort != null">
                and sort = #{sort}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="createUser != null">
                and create_user = #{createUser}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="updateUser != null">
                and update_user = #{updateUser}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="ord" useGeneratedKeys="true">
        insert into UserRoleSystem.base_role(code, role_name, status, sort, create_time, create_user, update_time,
                                             update_user)
        values (#{code}, #{roleName}, #{status}, #{sort}, #{createTime}, #{createUser}, #{updateTime}, #{updateUser})
    </insert>

    <insert id="insertBatch" keyProperty="ord" useGeneratedKeys="true">
        insert into UserRoleSystem.base_role(code, role_name, status, sort, create_time, create_user, update_time,
        update_user)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.code}, #{entity.roleName}, #{entity.status}, #{entity.sort}, #{entity.createTime},
            #{entity.createUser}, #{entity.updateTime}, #{entity.updateUser})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="ord" useGeneratedKeys="true">
        insert into UserRoleSystem.base_role(code, role_name, status, sort, create_time, create_user, update_time,
        update_user)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.code}, #{entity.roleName}, #{entity.status}, #{entity.sort}, #{entity.createTime},
            #{entity.createUser}, #{entity.updateTime}, #{entity.updateUser})
        </foreach>
        on duplicate key update
        code = values(code) , role_name = values(role_name) , status = values(status) , sort = values(sort) ,
        create_time = values(create_time) , create_user = values(create_user) , update_time = values(update_time) ,
        update_user = values(update_user)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update UserRoleSystem.base_role
        <set>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
        </set>
        where ord = #{ord}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from UserRoleSystem.base_role
        where ord = #{ord}
    </delete>

</mapper>

