<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chlang.user_role_system.dao.BaseUserRoleDao">

    <resultMap type="com.chlang.user_role_system.entity.BaseUserRole" id="BaseUserRoleMap">
        <result property="ord" column="ord" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="creater" column="creater" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseUserRoleMap">
        select ord,
               user_id,
               role_id,
               creater,
               create_time
        from UserRoleSystem.base_user_role
        where ord = #{ord}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseUserRoleMap">
        select ord,
               user_id,
               role_id,
               creater,
               create_time
        from UserRoleSystem.base_user_role limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseUserRoleMap">
        select
        ord, user_id, role_id, creater, create_time
        from UserRoleSystem.base_user_role
        <where>
            <if test="ord != null">
                and ord = #{ord}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="creater != null">
                and creater = #{creater}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="ord" useGeneratedKeys="true">
        insert into UserRoleSystem.base_user_role(user_id, role_id, creater, create_time)
        values (#{userId}, #{roleId}, #{creater}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="ord" useGeneratedKeys="true">
        insert into UserRoleSystem.base_user_role(user_id, role_id, creater, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.roleId}, #{entity.creater}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="ord" useGeneratedKeys="true">
        insert into UserRoleSystem.base_user_role(user_id, role_id, creater, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.roleId}, #{entity.creater}, #{entity.createTime})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , role_id = values(role_id) , creater = values(creater) , create_time =
        values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update UserRoleSystem.base_user_role
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="creater != null">
                creater = #{creater},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where ord = #{ord}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from UserRoleSystem.base_user_role
        where ord = #{ord}
    </delete>

</mapper>

